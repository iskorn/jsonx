<!--
  Copyright (c) 2015 OpenJAX

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  You should have received a copy of The MIT License (MIT) along with this
  program. If not, see <http://opensource.org/licenses/MIT/>.
-->
<xs:schema
  elementFormDefault="qualified"
  targetNamespace="http://jsonx.openjax.org/schema-0.9.8.xsd"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:jx="http://jsonx.openjax.org/schema-0.9.8.xsd"
  xmlns:dt="http://standard.openjax.org/xml/datatypes-0.9.2.xsd"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">
  
  <xs:import namespace="http://standard.openjax.org/xml/datatypes-0.9.2.xsd" schemaLocation="http://standard.openjax.org/xml/datatypes-0.9.2.xsd"/>
  
  <xs:complexType name="member" abstract="true"/>
  
  <xs:attributeGroup name="annullable">
    <xs:attribute name="nullable" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation>Can a property or array member be null. Default: true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  
  <xs:attributeGroup name="nameable">
    <xs:attribute name="name" type="dt:identifier" use="required">
      <xs:annotation>
        <xs:documentation>Name of property. Required.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  
  <xs:attributeGroup name="use">
    <xs:attribute name="use" default="required">
      <xs:annotation>
        <xs:documentation>Is property required or optional. Default: required.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="required"/>
          <xs:enumeration value="optional"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  
  <xs:simpleType name="typeName">
    <xs:annotation>
      <xs:documentation>Identifier pattern that must start with either a capital letter, or must include a '$' followed by a capital letter.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="dt:identifier">
      <xs:pattern value="([a-z][^$]+)|(.*\$[a-z].*)"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:attributeGroup name="type">
    <xs:attribute name="name" type="jx:typeName" use="required">
      <xs:annotation>
        <xs:documentation>Name of type. Required.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  
  <xs:complexType name="referenceMember" abstract="true">
    <xs:complexContent>
      <xs:extension base="jx:member">
        <xs:attribute name="type" type="jx:typeName" use="required">
          <xs:annotation>
            <xs:documentation>Name of referenced type. Required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="reference">
    <xs:complexContent>
      <xs:extension base="jx:referenceMember">
        <xs:attributeGroup ref="jx:nameable"/>
        <xs:attributeGroup ref="jx:annullable"/>
        <xs:attributeGroup ref="jx:use"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="booleanMember" abstract="true">
    <xs:complexContent>
      <xs:extension base="jx:member"/>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="boolean">
    <xs:complexContent>
      <xs:extension base="jx:booleanMember">
        <xs:attributeGroup ref="jx:nameable"/>
        <xs:attributeGroup ref="jx:annullable"/>
        <xs:attributeGroup ref="jx:use"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:simpleType name="form">
    <xs:restriction base="xs:string">
      <xs:enumeration value="integer"/>
      <xs:enumeration value="real"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="numberMember" abstract="true">
    <xs:complexContent>
      <xs:extension base="jx:member">
        <xs:attribute name="form" type="jx:form" default="real">
          <xs:annotation>
            <xs:documentation>Numeric form of number (integer or real). Default: real.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="range">
          <xs:annotation>
            <xs:documentation>
              Value range expressed in interval notation:
              Open (exclusive) interval: (min,max)
              Closed (inclusive) interal: [min,max]
              Half-open or half-closed interval: [min,max)
              Degenerate interval: [val]
            </xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:pattern value="[\(\[](-?\d+(\.\d+)?)?,(-?\d+(\.\d+)?)?[\)\]]"/>
              <xs:minLength value="4"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="number">
    <xs:complexContent>
      <xs:extension base="jx:numberMember">
        <xs:attributeGroup ref="jx:nameable"/>
        <xs:attributeGroup ref="jx:annullable"/>
        <xs:attributeGroup ref="jx:use"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="stringMember" abstract="true">
    <xs:complexContent>
      <xs:extension base="jx:member">
        <xs:attribute name="pattern" type="dt:stringNonEmpty">
          <xs:annotation>
            <xs:documentation>Regex pattern for string.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="string">
    <xs:complexContent>
      <xs:extension base="jx:stringMember">
        <xs:attributeGroup ref="jx:nameable"/>
        <xs:attributeGroup ref="jx:annullable"/>
        <xs:attributeGroup ref="jx:use"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:simpleType name="maxOccurs">
    <xs:restriction base="xs:string">
      <xs:pattern value="([1-9]\d*)|(unbounded)"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:attributeGroup name="recurrable">
    <xs:attribute name="minOccurs" type="xs:nonNegativeInteger" default="1">
      <xs:annotation>
        <xs:documentation>Minimum inclusive occurrence of element in array. Default: 1.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maxOccurs" type="jx:maxOccurs" default="unbounded">
      <xs:annotation>
        <xs:documentation>Maximum inclusive occurrence of element in array. Default: unbounded.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  
  <xs:complexType name="arrayMember" abstract="true">
    <xs:complexContent>
      <xs:extension base="jx:member">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
          <xs:element name="array">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:arrayMember">
                  <xs:attributeGroup ref="jx:annullable"/>
                  <xs:attributeGroup ref="jx:recurrable"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="boolean">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:booleanMember">
                  <xs:attributeGroup ref="jx:annullable"/>
                  <xs:attributeGroup ref="jx:recurrable"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="number">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:numberMember">
                  <xs:attributeGroup ref="jx:annullable"/>
                  <xs:attributeGroup ref="jx:recurrable"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="string">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:stringMember">
                  <xs:attributeGroup ref="jx:annullable"/>
                  <xs:attributeGroup ref="jx:recurrable"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="reference">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:referenceMember">
                  <xs:attributeGroup ref="jx:annullable"/>
                  <xs:attributeGroup ref="jx:recurrable"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
        </xs:choice>
        <xs:attribute name="minIterate" type="xs:nonNegativeInteger" default="1">
          <xs:annotation>
            <xs:documentation>Minimum inclusive iterations of child elements. Default: 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="maxIterate" type="jx:maxOccurs" default="1">
          <xs:annotation>
            <xs:documentation>Maximum inclusive iterations of child elements. Default: 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="array">
    <xs:complexContent>
      <xs:extension base="jx:arrayMember">
        <xs:attributeGroup ref="jx:nameable"/>
        <xs:attributeGroup ref="jx:annullable"/>
        <xs:attributeGroup ref="jx:use"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="objectMember" abstract="true">
    <xs:complexContent>
      <xs:extension base="jx:member">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
          <xs:element name="property" type="jx:member">
            <xs:unique name="propertyNameUnique">
              <xs:selector xpath="./jx:property"/>
              <xs:field xpath="@name"/>
            </xs:unique>
          </xs:element>
        </xs:sequence> 
        <xs:attribute name="extends" type="jx:typeName">
          <xs:annotation>
            <xs:documentation>Super type of object. Optional.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="object">
    <xs:complexContent>
      <xs:extension base="jx:objectMember">
        <xs:attributeGroup ref="jx:nameable"/>
        <xs:attributeGroup ref="jx:annullable"/>
        <xs:attributeGroup ref="jx:use"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:element name="schema">
    <xs:complexType>
      <xs:sequence>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="booleanType">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:booleanMember">
                  <xs:attributeGroup ref="jx:type"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="numberType">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:numberMember">
                  <xs:attributeGroup ref="jx:type"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="stringType">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:stringMember">
                  <xs:attributeGroup ref="jx:type"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="arrayType">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:arrayMember">
                  <xs:attributeGroup ref="jx:type"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="objectType">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="jx:objectMember">
                  <xs:attribute name="abstract" type="xs:boolean" default="false">
                    <xs:annotation>
                      <xs:documentation>Is object abstract. Default: false.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attributeGroup ref="jx:type"/>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
            <xs:unique name="objectNameUnique">
              <xs:selector xpath="./*"/>
              <xs:field xpath="@name"/>
            </xs:unique>
          </xs:element>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
    <xs:key name="templateKey">
      <xs:selector xpath="./jx:arrayType | ./jx:booleanType | ./jx:numberType | ./jx:objectType | ./jx:stringType"/>
      <xs:field xpath="@name"/>
    </xs:key>
    <xs:key name="objectNameKey">
      <xs:selector xpath="./jx:objectType"/>
      <xs:field xpath="@name"/>
    </xs:key>
    <xs:keyref name="propertyTypeKeyRef" refer="jx:templateKey">
      <xs:selector xpath=".//jx:property"/>
      <xs:field xpath="@type"/>
    </xs:keyref>
    <xs:keyref name="templateTypeKeyRef" refer="jx:templateKey">
      <xs:selector xpath=".//jx:reference"/>
      <xs:field xpath="@type"/>
    </xs:keyref>
    <xs:keyref name="objectExtendsKeyRef" refer="jx:objectNameKey">
      <xs:selector xpath=".//jx:template"/>
      <xs:field xpath="@extends"/>
    </xs:keyref>
    <xs:keyref name="objectTypeExtendsKeyRef" refer="jx:objectNameKey">
      <xs:selector xpath="./jx:objectType"/>
      <xs:field xpath="@extends"/>
    </xs:keyref>
    <xs:keyref name="propertyExtendsKeyRef" refer="jx:objectNameKey">
      <xs:selector xpath=".//jx:property"/>
      <xs:field xpath="@extends"/>
    </xs:keyref>
    <xs:keyref name="arrayObjectTypeKeyRef" refer="jx:objectNameKey">
      <xs:selector xpath=".//jx:array/jx:object"/>
      <xs:field xpath="@type"/>
    </xs:keyref>
    <xs:keyref name="propertyObjectTypeKeyRef" refer="jx:objectNameKey">
      <xs:selector xpath=".//jx:property/jx:object"/>
      <xs:field xpath="@type"/>
    </xs:keyref>
  </xs:element>

</xs:schema>